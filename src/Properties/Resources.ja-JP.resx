<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Magonote Toolkit For Embedded</value>
  </data>
  <data name="ViewTitleAboutInfo" xml:space="preserve">
    <value>このソフトウェアについて</value>
  </data>
  <data name="MenuConversion" xml:space="preserve">
    <value>変換系(_C)</value>
  </data>
  <data name="MenuGeneration" xml:space="preserve">
    <value>生成系(_G)</value>
  </data>
  <data name="MenuMcuIc" xml:space="preserve">
    <value>マイコン/IC系(_M)</value>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>ヘルプ(_H)</value>
  </data>
  <data name="MessageWelcomeTitle" xml:space="preserve">
    <value>｢Magonote Toolkit For Embedded｣へようこそ!</value>
  </data>
  <data name="MessageWelcomeBody" xml:space="preserve">
    <value>このツールは組み込みソフトウェア開発に便利なツールを集めたツールキットです｡
メニューからツールを選んでください｡</value>
  </data>
  <data name="LibrariesUsed" xml:space="preserve">
    <value>使用しているライブラリ</value>
  </data>
  <data name="MessageAboutInfoLicenseBody" xml:space="preserve">
    <value>このソフトウェアはMITライセンスです。
詳細は以下のURLを参照してください。</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>ライセンス</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>製品名</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="MessageAboutInfoLibrariesBody" xml:space="preserve">
    <value>詳細は以下のURLを参照してください。</value>
  </data>
  <data name="MenuComparison" xml:space="preserve">
    <value>比較系(_D)</value>
  </data>
  <data name="ViewTitleComparisonDefinition" xml:space="preserve">
    <value>定義比較</value>
  </data>
  <data name="AddDefinition" xml:space="preserve">
    <value>追加定義</value>
  </data>
  <data name="AfterDefinition" xml:space="preserve">
    <value>変更後定義</value>
  </data>
  <data name="BeforeDefinition" xml:space="preserve">
    <value>変更前定義</value>
  </data>
  <data name="ChangeDefinition" xml:space="preserve">
    <value>変更定義</value>
  </data>
  <data name="Compare" xml:space="preserve">
    <value>比較</value>
  </data>
  <data name="DeleteDefinition" xml:space="preserve">
    <value>削除定義</value>
  </data>
  <data name="MessageComplete" xml:space="preserve">
    <value>完了しました｡</value>
  </data>
  <data name="MessageProcessing" xml:space="preserve">
    <value>処理中です｡</value>
  </data>
  <data name="CompareClangDefines" xml:space="preserve">
    <value>C言語のdefineを比較する</value>
  </data>
  <data name="AfterValue" xml:space="preserve">
    <value>変更後の値</value>
  </data>
  <data name="BeforeValue" xml:space="preserve">
    <value>変更前の値</value>
  </data>
  <data name="MenuInspection" xml:space="preserve">
    <value>検査系(_I)</value>
  </data>
  <data name="ViewTitleFileInspection" xml:space="preserve">
    <value>ファイル検査</value>
  </data>
  <data name="CheckDisabled" xml:space="preserve">
    <value>チェック無効</value>
  </data>
  <data name="CheckEnabled" xml:space="preserve">
    <value>チェック有効</value>
  </data>
  <data name="ResultNA" xml:space="preserve">
    <value>対象外</value>
  </data>
  <data name="ResultNG" xml:space="preserve">
    <value>NG</value>
  </data>
  <data name="ResultOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="InspectionTarget" xml:space="preserve">
    <value>検査対象</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="InspectionOptions" xml:space="preserve">
    <value>検査設定</value>
  </data>
  <data name="NewlineAtEOF" xml:space="preserve">
    <value>ファイル末尾改行</value>
  </data>
  <data name="InspectionResult" xml:space="preserve">
    <value>検査結果</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>ファイル名</value>
  </data>
  <data name="Inspection" xml:space="preserve">
    <value>検査</value>
  </data>
  <data name="ImportantNotice" xml:space="preserve">
    <value>重要なお知らせ</value>
  </data>
  <data name="MessageSupportOnlyShiftJIS" xml:space="preserve">
    <value>｢Shift_JIS｣のみサポートしています｡</value>
  </data>
  <data name="MessageFieldIsRequired" xml:space="preserve">
    <value>フィールドは必須項目です。</value>
  </data>
  <data name="MessageFolderNotFound" xml:space="preserve">
    <value>フォルダが存在しません｡</value>
  </data>
  <data name="LineFeedCodeMixed" xml:space="preserve">
    <value>混在</value>
  </data>
  <data name="LineFeedCodeOnlyCR" xml:space="preserve">
    <value>CRのみ</value>
  </data>
  <data name="LineFeedCodeOnlyCRLF" xml:space="preserve">
    <value>CR+LFのみ</value>
  </data>
  <data name="LineFeedCodeOnlyLF" xml:space="preserve">
    <value>LFのみ</value>
  </data>
  <data name="LineFeedCodeUnknown" xml:space="preserve">
    <value>不明</value>
  </data>
  <data name="LineFeedCode" xml:space="preserve">
    <value>改行コード</value>
  </data>
  <data name="MessageFatalError" xml:space="preserve">
    <value>致命的なエラーが発生しました。
このアプリケーションを終了します｡
==========詳細情報==========</value>
  </data>
  <data name="MenuMeasurement" xml:space="preserve">
    <value>計測系</value>
  </data>
  <data name="ViewTitleTallyCounter" xml:space="preserve">
    <value>数取器</value>
  </data>
  <data name="CountUp" xml:space="preserve">
    <value>カウントアップ</value>
  </data>
  <data name="CountDown" xml:space="preserve">
    <value>カウントダウン</value>
  </data>
  <data name="CountClear" xml:space="preserve">
    <value>カウントクリア</value>
  </data>
  <data name="MessageHelpTallyCounter" xml:space="preserve">
    <value>[1][2][3][4][5]:カウンタ選択 | [W]:カウントアップ | [S]:カウントダウン | [BackSpace]:カウントクリア
テンキー [1][2][3][4][5]:カウンタ選択 | [+]:カウントアップ | [-]:カウントダウン | [0]:カウントクリア</value>
  </data>
</root>